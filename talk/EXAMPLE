A simple illustrating example

imagine x is an integer with an incoming
value between -10 and 10

{
 int y;
0:
 x = x + 1;
1:
 if (x < 0) {
2:
   y = x;
3:
 } else {
4:
   y = 0;
5:
 }
6:
 x = y + 1;
7:
}

there are two traces:
 0,1,2,3,6,7
 0,1,4,5,6,7

If we choose x=-2 initially we get the first 
If we choose x=2 initially we get the second
 - 2 tests achieve path adequacy

Concrete trace for x=-2
@0
 x = -2
 y = 0

@1
 x = -1
 y = 0

@2
 x = -1
 y = 0

@3
 x = -1
 y = -1

@6
 x = -1
 y = -1

@7
 x = 0
 y = -1


abstract domains:

intervals

@0
 x = [-10,10]
 y = [0,0]

@1
 x = [-9,11]
 y = [0,0]

@2
 x = [-9,0]
 y = [0,0]

@3
 x = [-9,0]
 y = [-9,0]

@6
 x = [-9,0]
 y = [-9,0]

@7
 x = [-9,0]
 y = [-8,1]

predicates 
 p_{lz}(x) = x<0
 p_{ez}(x) = x==0
 p_{gz}(x) = x>0

@0
 p_{lz}(x), p_{ez}(x), p_{gz}(x)
 p_{ez}(y)

@1
 p_{lz}(x), p_{ez}(x), p_{gz}(x)
 p_{ez}(y)

@2
 p_{lz}(x)
 p_{ez}(y)

@3
 p_{lz}(x)
 p_{lz}(y)

@6
 p_{lz}(x)
 p_{lz}(y)

@7
 p_{lz}(x), p_{ez}(x)
 p_{lz}(y)


